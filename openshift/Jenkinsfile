pipeline {
 
    agent any
 /*    
    options {
        timeout(time: 20, unit: 'MINUTES') 
    }
*/
    environment {
      PATH = "$PATH:/opt/openshift-client"
      CLUSTER_NAME = "minishift"
      PROJECT_NAME = "yann-test"
      CREATE_APP = 'false'
      TEMPLATE_URL = ""
      BUILD_NAME = "mvn-app"
    }  

    stages {

        stage('preamble') {
            steps {
                script {
                    openshift.withCluster(env.CLUSTER_NAME) {
                        openshift.withProject(env.PROJECT_NAME) {
                            echo "Using project: ${openshift.project()}"
                        }
                    }
                }
            }
        }
    
        stage('create') {
            when { 
                environment  name : 'CREATE_APP', value: 'true'  
            }

            steps {
                script {
                    openshift.withCluster(env.CLUSTER_NAME) {
                        openshift.withProject(env.PROJECT_NAME) {
//                        openshift.newApp("${TEMPLATE_URL}") 
                            echo "CREATION !!!"
                        }
                    }
                }
            }
        } // end stage
    
        stage('build') {
            steps {
                script {
                    openshift.withCluster(env.CLUSTER_NAME) {
                        openshift.withProject(env.PROJECT_NAME) {
                            def builds = openshift.selector("bc", env.BUILD_NAME).startBuild()
//                            def builds = openshift.startBuild(env.BUILD_NAME)

                            timeout(5) { 
                                builds.untilEach(1) {
                                   echo "build : ${it.name()}"
//                                    echo "${it.object()}"
                                    return (it.object().status.phase == "Complete")
                                }
                            }
  /*
                            builds.withEach {
                                echo "new-build created resource: ${it.name()}"
                            }
  */
                        }
                    }
                }
            }
        } // end build stage
    
       
        stage('deploy') {
            steps {
                script {
                    openshift.withCluster(env.CLUSTER_NAME) {
                        openshift.withProject(env.PROJECT_NAME) {    
                            timeout(5) { 
                                openshift.selector("dc", [ app: "my-java-app" ]).related('pods').untilEach(1) {
                                    echo "pod : ${it.name()}"
                                    return (it.object().status.phase == "Running")
                                }
                            }
                        }
                    }
                }
            }
        } // end build stage

        stage('test') {
            steps {
                sh 'echo Testing ...'
            }
        }
        
        stage('tag') {
            steps {
                script {
                    openshift.withCluster(env.CLUSTER_NAME) {
                        openshift.withProject(env.PROJECT_NAME) {   
                            openshift.tag("myapp:dev", "myapp:stage") 
                        }
                    }
                }
            }
        }
    } // end stages   
}